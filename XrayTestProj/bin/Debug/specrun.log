2018-11-28T12:16:17.6359951+02:00;Thread#1;Info;starting test run
2018-11-28T12:16:17.6429626+02:00;Thread#1;Info;Discovering target: Default
2018-11-28T12:16:17.6429626+02:00;Thread#1;Info;Discovering tests from assembly: C:\Users\user\source\repos\XrayTestProj\XrayTestProj\bin\Debug\XrayTestProj.dll
Appdomain Disposed
Test Suite Dump
#0: UnitTestProject1/UnitTestProject1 - 
#1: Default - 
#2: XrayTestProj - 
#3:  - 
#4: Add two positive numbers, 20 - TestAssembly:XrayTestProj/Feature:/Scenario:Add+two+positive+numbers%2c+20
#5: Add two positive numbers, 2 - TestAssembly:XrayTestProj/Feature:/Scenario:Add+two+positive+numbers%2c+2
#6: Add two positive numbers, 0 - TestAssembly:XrayTestProj/Feature:/Scenario:Add+two+positive+numbers%2c+0
#7: Add two positive numbers, 4 - TestAssembly:XrayTestProj/Feature:/Scenario:Add+two+positive+numbers%2c+4
#8: Add two positive numbers, 5 - TestAssembly:XrayTestProj/Feature:/Scenario:Add+two+positive+numbers%2c+5
#9: add two numbers - TestAssembly:XrayTestProj/Feature:/Scenario:add+two+numbers
#10: add two negative numbers, Variant 0 - TestAssembly:XrayTestProj/Feature:/Scenario:add+two+negative+numbers%2c+Variant+0
#11: add two negative numbers, Variant 1 - TestAssembly:XrayTestProj/Feature:/Scenario:add+two+negative+numbers%2c+Variant+1
End: Test Suite Dump
Thread#0:Scheduler: get next test for thread 0
Thread#:Scheduler: testitem #4 from normal test queue 
Thread#0:Scheduler: considering testitem #4 for thread 0
Thread#0:TestItem#4:testItemMatchesCurrentTestThread:UnSpecific
Thread#0:TestItem#4:runsOnOneOtherThreadSpecific:False
Thread#0:TestItem#4:runsOnOneOtherThreadUnspecific:False
Thread#0:Scheduler: using testitem #4 for thread 0
Thread#0:Scheduler: Test #4 is scheduled for thread
Thread#0:Scheduler: with testItemExecutionIndex 0
Thread #0: creating new test thread executor for XrayTestProj, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null (target: Default)
Thread#0: Test #4/0 is started on thread #0
Thread#0:T:-> Using app.config
Thread#0:B:Given I have entered 20 into the calculator
Thread#0:T:done: UnitTest1.GivenIHaveEnteredIntoTheCalculator(20) (0.0s)
Thread#0:B:And I have also entered 30 into the calculator
Thread#0:T:done: UnitTest1.GivenIHaveAlsoEnteredIntoTheCalculator(30) (0.0s)
Thread#0:B:When I press add
Thread#0:T:done: UnitTest1.WhenIPressAdd() (0.0s)
Thread#0:B:Then the result should be 50 on the screen
Thread#0:T:done: UnitTest1.ThenTheResultShouldBeOnTheScreen(50) (0.0s)
Thread#0:Scheduler: get next test for thread 0
Thread#:Scheduler: testitem #5 from normal test queue 
Thread#0:Scheduler: considering testitem #5 for thread 0
Thread#0:TestItem#5:testItemMatchesCurrentTestThread:UnSpecific
Thread#0:TestItem#5:runsOnOneOtherThreadSpecific:False
Thread#0:TestItem#5:runsOnOneOtherThreadUnspecific:False
Thread#0:Scheduler: using testitem #5 for thread 0
Thread#0:Scheduler: Test #5 is scheduled for thread
Thread#0:Scheduler: with testItemExecutionIndex 0
Thread#0: Test #4/0 is finished on thread #0 as Succeeded within 0.7700021 seconds
Thread#0: Test #5/0 is started on thread #0
Thread#0:B:Given I have entered 2 into the calculator
Thread#0:T:done: UnitTest1.GivenIHaveEnteredIntoTheCalculator(2) (0.0s)
Thread#0:B:And I have also entered 5 into the calculator
Thread#0:T:done: UnitTest1.GivenIHaveAlsoEnteredIntoTheCalculator(5) (0.0s)
Thread#0:B:When I press add
Thread#0:T:done: UnitTest1.WhenIPressAdd() (0.0s)
Thread#0:B:Then the result should be 7 on the screen
Thread#0:T:done: UnitTest1.ThenTheResultShouldBeOnTheScreen(7) (0.0s)
Thread#0:Scheduler: get next test for thread 0
Thread#:Scheduler: testitem #6 from normal test queue 
Thread#0:Scheduler: considering testitem #6 for thread 0
Thread#0:TestItem#6:testItemMatchesCurrentTestThread:UnSpecific
Thread#0:TestItem#6:runsOnOneOtherThreadSpecific:False
Thread#0:TestItem#6:runsOnOneOtherThreadUnspecific:False
Thread#0:Scheduler: using testitem #6 for thread 0
Thread#0:Scheduler: Test #6 is scheduled for thread
Thread#0:Scheduler: with testItemExecutionIndex 0
Thread#0: Test #5/0 is finished on thread #0 as Succeeded within 0.0020008 seconds
Thread#0: Test #6/0 is started on thread #0
Thread#0:B:Given I have entered 0 into the calculator
Thread#0:T:done: UnitTest1.GivenIHaveEnteredIntoTheCalculator(0) (0.0s)
Thread#0:B:And I have also entered 40 into the calculator
Thread#0:T:done: UnitTest1.GivenIHaveAlsoEnteredIntoTheCalculator(40) (0.0s)
Thread#0:B:When I press add
Thread#0:T:done: UnitTest1.WhenIPressAdd() (0.0s)
Thread#0:B:Then the result should be 40 on the screen
Thread#0:T:done: UnitTest1.ThenTheResultShouldBeOnTheScreen(40) (0.0s)
Thread#0:Scheduler: get next test for thread 0
Thread#:Scheduler: testitem #7 from normal test queue 
Thread#0:Scheduler: considering testitem #7 for thread 0
Thread#0:TestItem#7:testItemMatchesCurrentTestThread:UnSpecific
Thread#0:TestItem#7:runsOnOneOtherThreadSpecific:False
Thread#0:TestItem#7:runsOnOneOtherThreadUnspecific:False
Thread#0:Scheduler: using testitem #7 for thread 0
Thread#0:Scheduler: Test #7 is scheduled for thread
Thread#0:Scheduler: with testItemExecutionIndex 0
Thread#0: Test #6/0 is finished on thread #0 as Succeeded within 0.0019993 seconds
Thread#0: Test #7/0 is started on thread #0
Thread#0:B:Given I have entered 4 into the calculator
Thread#0:T:done: UnitTest1.GivenIHaveEnteredIntoTheCalculator(4) (0.0s)
Thread#0:B:And I have also entered 50 into the calculator
Thread#0:T:done: UnitTest1.GivenIHaveAlsoEnteredIntoTheCalculator(50) (0.0s)
Thread#0:B:When I press add
Thread#0:T:done: UnitTest1.WhenIPressAdd() (0.0s)
Thread#0:B:Then the result should be 54 on the screen
Thread#0:T:done: UnitTest1.ThenTheResultShouldBeOnTheScreen(54) (0.0s)
Thread#0:Scheduler: get next test for thread 0
Thread#:Scheduler: testitem #8 from normal test queue 
Thread#0:Scheduler: considering testitem #8 for thread 0
Thread#0:TestItem#8:testItemMatchesCurrentTestThread:UnSpecific
Thread#0:TestItem#8:runsOnOneOtherThreadSpecific:False
Thread#0:TestItem#8:runsOnOneOtherThreadUnspecific:False
Thread#0:Scheduler: using testitem #8 for thread 0
Thread#0:Scheduler: Test #8 is scheduled for thread
Thread#0:Scheduler: with testItemExecutionIndex 0
Thread#0: Test #7/0 is finished on thread #0 as Succeeded within 0.001 seconds
Thread#0: Test #8/0 is started on thread #0
Thread#0:B:Given I have entered 5 into the calculator
Thread#0:T:done: UnitTest1.GivenIHaveEnteredIntoTheCalculator(5) (0.0s)
Thread#0:B:And I have also entered 50 into the calculator
Thread#0:T:done: UnitTest1.GivenIHaveAlsoEnteredIntoTheCalculator(50) (0.0s)
Thread#0:B:When I press add
Thread#0:T:done: UnitTest1.WhenIPressAdd() (0.0s)
Thread#0:B:Then the result should be 55 on the screen
Thread#0:T:done: UnitTest1.ThenTheResultShouldBeOnTheScreen(55) (0.0s)
Thread#0:Scheduler: get next test for thread 0
Thread#:Scheduler: testitem #9 from normal test queue 
Thread#0:Scheduler: considering testitem #9 for thread 0
Thread#0:TestItem#9:testItemMatchesCurrentTestThread:UnSpecific
Thread#0:TestItem#9:runsOnOneOtherThreadSpecific:False
Thread#0:TestItem#9:runsOnOneOtherThreadUnspecific:False
Thread#0:Scheduler: using testitem #9 for thread 0
Thread#0:Scheduler: Test #9 is scheduled for thread
Thread#0:Scheduler: with testItemExecutionIndex 0
Thread#0: Test #8/0 is finished on thread #0 as Succeeded within 0.0019995 seconds
Thread#0: Test #9/0 is started on thread #0
Thread#0:B:Given I have entered 50 into the calculator
Thread#0:T:done: UnitTest1.GivenIHaveEnteredIntoTheCalculator(50) (0.0s)
Thread#0:B:And I have also entered 70 into the calculator
Thread#0:T:done: UnitTest1.GivenIHaveAlsoEnteredIntoTheCalculator(70) (0.0s)
Thread#0:B:When I press add
Thread#0:T:done: UnitTest1.WhenIPressAdd() (0.0s)
Thread#0:B:Then the result should be 120 on the screen
Thread#0:T:done: UnitTest1.ThenTheResultShouldBeOnTheScreen(120) (0.0s)
Thread#0:Scheduler: get next test for thread 0
Thread#:Scheduler: testitem #10 from normal test queue 
Thread#0:Scheduler: considering testitem #10 for thread 0
Thread#0:TestItem#10:testItemMatchesCurrentTestThread:UnSpecific
Thread#0:TestItem#10:runsOnOneOtherThreadSpecific:False
Thread#0:TestItem#10:runsOnOneOtherThreadUnspecific:False
Thread#0:Scheduler: using testitem #10 for thread 0
Thread#0:Scheduler: Test #10 is scheduled for thread
Thread#0:Scheduler: with testItemExecutionIndex 0
Thread#0: Test #9/0 is finished on thread #0 as Succeeded within 0.0009991 seconds
Thread#0: Test #10/0 is started on thread #0
Thread#0:B:Given I have entered -1 into the calculator
Thread#0:T:done: UnitTest1.GivenIHaveEnteredIntoTheCalculator(-1) (0.0s)
Thread#0:B:And I have also entered -2 into the calculator
Thread#0:T:done: UnitTest1.GivenIHaveAlsoEnteredIntoTheCalculator(-2) (0.0s)
Thread#0:B:When I press add
Thread#0:T:done: UnitTest1.WhenIPressAdd() (0.0s)
Thread#0:B:Then the result should be -3 on the screen
Thread#0:T:done: UnitTest1.ThenTheResultShouldBeOnTheScreen(-3) (0.0s)
Thread#0:Scheduler: get next test for thread 0
Thread#:Scheduler: testitem #11 from normal test queue 
Thread#0:Scheduler: considering testitem #11 for thread 0
Thread#0:TestItem#11:testItemMatchesCurrentTestThread:UnSpecific
Thread#0:TestItem#11:runsOnOneOtherThreadSpecific:False
Thread#0:TestItem#11:runsOnOneOtherThreadUnspecific:False
Thread#0:Scheduler: using testitem #11 for thread 0
Thread#0:Scheduler: Test #11 is scheduled for thread
Thread#0:Scheduler: with testItemExecutionIndex 0
Thread#0: Test #10/0 is finished on thread #0 as Succeeded within 0.0019998 seconds
Thread#0: Test #11/0 is started on thread #0
Thread#0:B:Given I have entered 1 into the calculator
Thread#0:T:done: UnitTest1.GivenIHaveEnteredIntoTheCalculator(1) (0.0s)
Thread#0:B:And I have also entered -1 into the calculator
Thread#0:T:done: UnitTest1.GivenIHaveAlsoEnteredIntoTheCalculator(-1) (0.0s)
Thread#0:B:When I press add
Thread#0:T:done: UnitTest1.WhenIPressAdd() (0.0s)
Thread#0:B:Then the result should be 0 on the screen
Thread#0:T:done: UnitTest1.ThenTheResultShouldBeOnTheScreen(0) (0.0s)
Thread#0:Scheduler: get next test for thread 0
Thread#:Scheduler: at the end of normal test queue
Thread#0:Scheduler: enumerator for thread is at end
Thread#0:Scheduler: No more tests for thread
Thread#0: Test #11/0 is finished on thread #0 as Succeeded within 0.0050005 seconds
Appdomain Disposed
Thread#-1:Scheduler: get next test for thread -1
Thread#:Scheduler: at the end of normal test queue
Thread#-1:Scheduler: enumerator for thread is at end
2018-11-28T12:16:18.6449761+02:00;Thread#1;Info;test run finished
2018-11-28T12:16:18.6459626+02:00;Thread#1;Info;publishing test results
2018-11-28T12:16:18.6489627+02:00;Thread#1;Info;test results published
2018-11-28T12:16:18.6489627+02:00;Thread#1;Info;generating reports
2018-11-28T12:16:18.6639636+02:00;Thread#1;Info;creating 1 report(s)
2018-11-28T12:16:18.6639636+02:00;Thread#1;Info;generate Report C:\Users\user\source\repos\XrayTestProj\XrayTestProj\bin\Debug\CucumberJson.cshtml
2018-11-28T12:16:19.3919952+02:00;Thread#1;Info;reports generated
Total: 8
Succeeded: 8
Ignored: 0
Pending: 0
Skipped: 0
Failed: 0
